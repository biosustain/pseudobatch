name: Test package

# This is a basic action to run the package's tests.
# it caches the CmdStan installation between runs.

on:
  push:
    branches:
      - 'main'
      - 'develop'
    tags:
      - '**'
    paths:
      - '**.py'
      - '**.stan'
  pull_request:
  workflow_dispatch: {}

env:
  CMDSTAN_VERSION: "2.33.0"

jobs:
  sk-stan-learn:
    name: tests
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]  # , macos-latest, windows-latest
        python-version: ["3.10", "3.11"]  # 3.7, 3.8, 3.9, 
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out github
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install cmdstanpy
        run: |
          python -m pip install --upgrade pip wheel
          pip install "cmdstanpy==1.1.0"

      - name: CmdStan installation cacheing
        uses: actions/cache@v2
        with:
          path: ~/.cmdstan
          key: ${{ runner.os }}-cmdstan-${{ env.CMDSTAN_VERSION }}

      - name: Install CmdStan (Linux, macOS)
        if: matrix.os != 'windows-latest'
        run: |
          python -m cmdstanpy.install_cmdstan --version "${{ env.CMDSTAN_VERSION }}" --cores 2

      - name: Install CmdStan (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m cmdstanpy.install_cmdstan --compiler --version "${{ env.CMDSTAN_VERSION }}" --cores 2

      - name: Install package
        run: |
          pip install .[development]
          pip install .[error_propagation]

      - name: Run tests
        run: |
          pytest -v ./tests

